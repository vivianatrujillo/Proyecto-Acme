-- MySQL Script generated by MySQL Workbench
-- 02/21/15 08:26:25
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema acme
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema acme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `acme` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `acme` ;

-- -----------------------------------------------------
-- Table `acme`.`RH`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`RH` ;

CREATE TABLE IF NOT EXISTS `acme`.`RH` (
  `idRH` INT NOT NULL COMMENT 'CODIGO DEL RH DELA PERSONA ',
  `Nombre` VARCHAR(15) NOT NULL COMMENT 'NOMBRE DEL RH DE LA PERSONA',
  PRIMARY KEY (`idRH`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Eps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Eps` ;

CREATE TABLE IF NOT EXISTS `acme`.`Eps` (
  `idEps` INT NOT NULL COMMENT 'CODIGO DE LA EPS',
  `Nombre_eps` VARCHAR(25) NOT NULL COMMENT 'NOMBRE DE LA EPS ',
  PRIMARY KEY (`idEps`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Trabajador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Trabajador` ;

CREATE TABLE IF NOT EXISTS `acme`.`Trabajador` (
  `idTrabajador` INT NOT NULL COMMENT 'CODIGO DEL TRABAJADOR ',
  `Turno_trabajador` INT NOT NULL COMMENT 'TURNO DEL TRABAJADOR',
  PRIMARY KEY (`idTrabajador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Genero`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Genero` ;

CREATE TABLE IF NOT EXISTS `acme`.`Genero` (
  `idGenero` INT NOT NULL COMMENT 'CODIGO DEL GENERO DE LA PERSONA ',
  `Nombre` VARCHAR(8) NOT NULL COMMENT 'NOMBRE DEL GENERO DE LA PERSONA ',
  PRIMARY KEY (`idGenero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Historia Clinica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Historia Clinica` ;

CREATE TABLE IF NOT EXISTS `acme`.`Historia Clinica` (
  `idHistoria Clinica` INT NOT NULL COMMENT 'CODIGO DE LA HISTORIA CLINICA ',
  `idTrabajador` INT NOT NULL COMMENT 'CODIGO DEL TRABAJADOR QUE REALIZALA HISTORIA CLINICA ',
  `id_diagnostico` INT NOT NULL COMMENT 'CODIGO DEL DIAGNOSTICO',
  `id_formato de evolucion` INT NOT NULL COMMENT 'CODIGO DEL FORMATO DE EVOLUCION',
  `id_tratamiento` INT NOT NULL COMMENT 'CODIGO DEL TRATAMIENTO',
  PRIMARY KEY (`idHistoria Clinica`),
  INDEX `fk_Historia Clinica_Trabajador1_idx` (`idTrabajador` ASC),
  CONSTRAINT `fk_Historia Clinica_Trabajador1`
    FOREIGN KEY (`idTrabajador`)
    REFERENCES `acme`.`Trabajador` (`idTrabajador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Paciente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Paciente` ;

CREATE TABLE IF NOT EXISTS `acme`.`Paciente` (
  `idPaciente` INT NOT NULL COMMENT 'NUMERO DEL DOCUMENTO DE LA PERSONA',
  `idTrabajador` INT NOT NULL COMMENT 'CODIGO DEL TRABAJADOR ',
  `idEps` INT NOT NULL COMMENT 'CODIGO DE LA PERSONA AFILIADA ',
  `idRH` INT NOT NULL COMMENT 'TIPO DE SANGRE DE LA PERSONA',
  `idGenero` INT NOT NULL COMMENT 'GENERO DE LA PERSONA \n',
  `Estado_Civil` INT NOT NULL COMMENT 'ESTADO CIVIL DE LA PERSONA',
  `Nombre_1` VARCHAR(12) NOT NULL COMMENT 'PRIMER NOMBRE DE LA PERSONA',
  `Nombre_2` VARCHAR(12) NOT NULL COMMENT 'SEGUNDO NOMBRE DE LA PERSONA ',
  `Apellido_1` VARCHAR(12) NOT NULL COMMENT 'PRIMER APELLIDO DE LA PERSONA ',
  `Apellido_2` VARCHAR(12) NOT NULL COMMENT 'SEGUNDO APELLIDO DE LA PERSONA',
  `Tel_fijo` INT NOT NULL COMMENT 'NUMERO DE TELEFONO DE LA CASA DE LA PERSONA ',
  `E_mail` VARCHAR(25) NOT NULL COMMENT 'CORREO ELECTRONICO DE LA PERSONA ',
  `Direccion` VARCHAR(15) NOT NULL COMMENT 'DIRECCION DE RESIDENCIA DE LA PERSONA ',
  `Fecha_Nacimiento` DATETIME NOT NULL COMMENT 'FECHA EN LA QUE NACIOLA PERSONA',
  `Num_celular` INT NOT NULL COMMENT 'NUMERO DE CELILAR DE LA PERSONA',
  `idHistoria Clinica` INT NOT NULL COMMENT 'CODIGO DE LA HISTORIA CLINICA ',
  PRIMARY KEY (`idPaciente`),
  INDEX `fk_Paciente_RH1_idx` (`idRH` ASC),
  INDEX `fk_Paciente_Eps1_idx` (`idEps` ASC),
  INDEX `fk_Paciente_Trabajador1_idx` (`idTrabajador` ASC),
  INDEX `fk_Paciente_Genero1_idx` (`idGenero` ASC),
  INDEX `fk_Paciente_Historia Clinica1_idx` (`idHistoria Clinica` ASC),
  CONSTRAINT `fk_Paciente_RH1`
    FOREIGN KEY (`idRH`)
    REFERENCES `acme`.`RH` (`idRH`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_Eps1`
    FOREIGN KEY (`idEps`)
    REFERENCES `acme`.`Eps` (`idEps`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_Trabajador1`
    FOREIGN KEY (`idTrabajador`)
    REFERENCES `acme`.`Trabajador` (`idTrabajador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_Genero1`
    FOREIGN KEY (`idGenero`)
    REFERENCES `acme`.`Genero` (`idGenero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_Historia Clinica1`
    FOREIGN KEY (`idHistoria Clinica`)
    REFERENCES `acme`.`Historia Clinica` (`idHistoria Clinica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Referencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Referencia` ;

CREATE TABLE IF NOT EXISTS `acme`.`Referencia` (
  `idReferencia` INT NOT NULL COMMENT 'CODIGO DE REFERENCIA DEL PACIENTE ',
  `referencia_familiar` VARCHAR(25) NOT NULL COMMENT 'REFERENCIA FAMILIAR DEL PACIENTE',
  PRIMARY KEY (`idReferencia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Cita`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Cita` ;

CREATE TABLE IF NOT EXISTS `acme`.`Cita` (
  `idCita` INT NOT NULL COMMENT 'CODIGO DE LA CITA ASIGNADA ',
  PRIMARY KEY (`idCita`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Valoracion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Valoracion` ;

CREATE TABLE IF NOT EXISTS `acme`.`Valoracion` (
  `idValoracion` INT NOT NULL COMMENT 'CODIGO DE LA VALORACION DEL PACIENTE ',
  `nombre` VARCHAR(25) NOT NULL COMMENT 'NOMBRE DE LA VALORACION QUE SE DESSEA REALIZAR EL PACIENTE ',
  `idPaciente` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE ',
  PRIMARY KEY (`idValoracion`),
  INDEX `fk_Valoracion_Paciente1_idx` (`idPaciente` ASC),
  CONSTRAINT `fk_Valoracion_Paciente1`
    FOREIGN KEY (`idPaciente`)
    REFERENCES `acme`.`Paciente` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Tratamiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Tratamiento` ;

CREATE TABLE IF NOT EXISTS `acme`.`Tratamiento` (
  `idTratamiento` INT NOT NULL COMMENT 'CODIGO DEL TRATAMIENTO DEL PACIENTE ',
  `Nombre_tratamiento` VARCHAR(25) NOT NULL COMMENT 'NOMBRE DEL TRATAMIENTO DEL PACIENTE ',
  `idHistoria Clinica` INT NOT NULL COMMENT 'CODIGO DE LA HISTORIA CLINICA',
  PRIMARY KEY (`idTratamiento`),
  INDEX `fk_Tratamiento_Historia Clinica1_idx` (`idHistoria Clinica` ASC),
  CONSTRAINT `fk_Tratamiento_Historia Clinica1`
    FOREIGN KEY (`idHistoria Clinica`)
    REFERENCES `acme`.`Historia Clinica` (`idHistoria Clinica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Formato de evolucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Formato de evolucion` ;

CREATE TABLE IF NOT EXISTS `acme`.`Formato de evolucion` (
  `idFormato_de_evolucion` INT NOT NULL COMMENT 'CODIGO DEL FORMATO DE EVOLUCION',
  `idTratamiento` INT NOT NULL COMMENT 'CODIGO DELTRATAMIENTO DEL PACIENTE ',
  `Fecha` DATE NOT NULL COMMENT 'FECHA DEL FORMATO DE EVOLUCION',
  `Hora` TIME NOT NULL COMMENT 'HORA DEL FORMATO DE EVOLUCION',
  `Localizacion` VARCHAR(15) NOT NULL COMMENT 'LUGAR DEL FORMATO DE EVOLUCION',
  `Cod_cita` INT NOT NULL COMMENT 'CODIGO DE LA CITA \n',
  `idHistoria Clinica` INT NOT NULL,
  `Formato de evolucioncol` VARCHAR(45) NOT NULL COMMENT 'CODIGO DEL FORMATO DE EVOLUCION',
  PRIMARY KEY (`idFormato_de_evolucion`),
  INDEX `fk_Formato de evolucion_Tratamiento1_idx` (`idTratamiento` ASC),
  INDEX `fk_Formato de evolucion_Historia Clinica1_idx` (`idHistoria Clinica` ASC),
  CONSTRAINT `fk_Formato de evolucion_Tratamiento1`
    FOREIGN KEY (`idTratamiento`)
    REFERENCES `acme`.`Tratamiento` (`idTratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Formato de evolucion_Historia Clinica1`
    FOREIGN KEY (`idHistoria Clinica`)
    REFERENCES `acme`.`Historia Clinica` (`idHistoria Clinica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Diagnostico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Diagnostico` ;

CREATE TABLE IF NOT EXISTS `acme`.`Diagnostico` (
  `idDiagnostico` INT NOT NULL COMMENT 'CODIGO DEL DIAGNOSTICO',
  `idValoracion` INT NOT NULL COMMENT 'CODIGO DE LA VALORACION',
  `Observaciones` VARCHAR(450) NOT NULL COMMENT 'OBSERVACIONES DE LOS PACIENTES ',
  `idHistoria Clinica` INT NOT NULL COMMENT 'CODIGO DE LA HISTORIA CLINICA',
  PRIMARY KEY (`idDiagnostico`),
  INDEX `fk_Diagnostico_Valoracion1_idx` (`idValoracion` ASC),
  INDEX `fk_Diagnostico_Historia Clinica1_idx` (`idHistoria Clinica` ASC),
  CONSTRAINT `fk_Diagnostico_Valoracion1`
    FOREIGN KEY (`idValoracion`)
    REFERENCES `acme`.`Valoracion` (`idValoracion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Diagnostico_Historia Clinica1`
    FOREIGN KEY (`idHistoria Clinica`)
    REFERENCES `acme`.`Historia Clinica` (`idHistoria Clinica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Rol` ;

CREATE TABLE IF NOT EXISTS `acme`.`Rol` (
  `cod_rol` INT NOT NULL COMMENT 'CODIGODEL ROL DEL TRABAJADOR',
  `idTrabajador` INT NOT NULL COMMENT 'CODIGO DEL TRABAJADOR ',
  PRIMARY KEY (`cod_rol`),
  CONSTRAINT `fk_Rol_Trabajador1`
    FOREIGN KEY (`idTrabajador`)
    REFERENCES `acme`.`Trabajador` (`idTrabajador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Permisos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Permisos` ;

CREATE TABLE IF NOT EXISTS `acme`.`Permisos` (
  `cod_permiso` INT NOT NULL COMMENT 'CODIGO DEL PERMISO DEL TRABAJADOR ',
  `nombre` VARCHAR(25) NOT NULL COMMENT 'NOMBRE DEL PERMISODEL TRABAJADOR ',
  PRIMARY KEY (`cod_permiso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Enfermedad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Enfermedad` ;

CREATE TABLE IF NOT EXISTS `acme`.`Enfermedad` (
  `idEnfermedad` INT NOT NULL COMMENT 'CODIGO DE ENFERMEDAD DEL PACIENTE ',
  `Nombre_enfermedad` VARCHAR(25) NOT NULL COMMENT 'NOMBRE DE LA ENFRMEDADQUE TIENE EL PACIENTE ',
  PRIMARY KEY (`idEnfermedad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Paciente_Enfermedad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Paciente_Enfermedad` ;

CREATE TABLE IF NOT EXISTS `acme`.`Paciente_Enfermedad` (
  `cod_Paciente_Enfermedadcol` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE Y ENFERMEDAD ',
  `idPaciente` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE ',
  PRIMARY KEY (`cod_Paciente_Enfermedadcol`),
  INDEX `fk_Paciente_has_Enfermedad_Paciente1_idx` (`idPaciente` ASC),
  CONSTRAINT `fk_Paciente_has_Enfermedad_Paciente1`
    FOREIGN KEY (`idPaciente`)
    REFERENCES `acme`.`Paciente` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Paciente_Referencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Paciente_Referencia` ;

CREATE TABLE IF NOT EXISTS `acme`.`Paciente_Referencia` (
  `cod_Paciente_Referencia` VARCHAR(45) NOT NULL COMMENT 'CODIGO DEL PACIENTE Y REFERENCIA ',
  `idPaciente` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE',
  `idReferencia` INT NOT NULL COMMENT 'CODIGO DE REFERENCIA DEL PACIETNE ',
  PRIMARY KEY (`cod_Paciente_Referencia`),
  INDEX `fk_Paciente_has_Referencia_Referencia1_idx` (`idReferencia` ASC),
  INDEX `fk_Paciente_has_Referencia_Paciente1_idx` (`idPaciente` ASC),
  CONSTRAINT `fk_Paciente_has_Referencia_Paciente1`
    FOREIGN KEY (`idPaciente`)
    REFERENCES `acme`.`Paciente` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_has_Referencia_Referencia1`
    FOREIGN KEY (`idReferencia`)
    REFERENCES `acme`.`Referencia` (`idReferencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Rol/Permisos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Rol/Permisos` ;

CREATE TABLE IF NOT EXISTS `acme`.`Rol/Permisos` (
  `Rol_Permisos` VARCHAR(45) NOT NULL COMMENT 'CODIGO DEL ROL, PERMIRO DEL TRABAJADOR',
  `cod_rol` INT NOT NULL COMMENT 'CODIGO DEL ROL DEL TRABAJADOR',
  `cod_permiso` INT NOT NULL COMMENT 'CODIGO DEL PERMISO DEL TRABAJADOR ',
  PRIMARY KEY (`Rol_Permisos`),
  INDEX `fk_Rol_has_Permisos_Permisos1_idx` (`cod_permiso` ASC),
  INDEX `fk_Rol_has_Permisos_Rol1_idx` (`cod_rol` ASC),
  CONSTRAINT `fk_Rol_has_Permisos_Rol1`
    FOREIGN KEY (`cod_rol`)
    REFERENCES `acme`.`Rol` (`cod_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rol_has_Permisos_Permisos1`
    FOREIGN KEY (`cod_permiso`)
    REFERENCES `acme`.`Permisos` (`cod_permiso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Paciente_Enfermedad_Enfermedad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Paciente_Enfermedad_Enfermedad` ;

CREATE TABLE IF NOT EXISTS `acme`.`Paciente_Enfermedad_Enfermedad` (
  `cod_Paciente_Enfermedad_Enfermedad` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE, ENFERMEDAD ',
  `cod_Paciente_Enfermedadcol` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE, ENFERMEDAD ',
  `idEnfermedad` INT NOT NULL COMMENT 'CODIGO ENFERMEDAD DEL PACIENTE ',
  PRIMARY KEY (`idEnfermedad`, `cod_Paciente_Enfermedad_Enfermedad`, `cod_Paciente_Enfermedadcol`),
  INDEX `fk_Paciente_Enfermedad_has_Enfermedad_Enfermedad1_idx` (`idEnfermedad` ASC),
  INDEX `fk_Paciente_Enfermedad_has_Enfermedad_Paciente_Enfermedad1_idx` (`cod_Paciente_Enfermedadcol` ASC),
  CONSTRAINT `fk_Paciente_Enfermedad_has_Enfermedad_Paciente_Enfermedad1`
    FOREIGN KEY (`cod_Paciente_Enfermedadcol`)
    REFERENCES `acme`.`Paciente_Enfermedad` (`cod_Paciente_Enfermedadcol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_Enfermedad_has_Enfermedad_Enfermedad1`
    FOREIGN KEY (`idEnfermedad`)
    REFERENCES `acme`.`Enfermedad` (`idEnfermedad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Valoracion_Tratamiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Valoracion_Tratamiento` ;

CREATE TABLE IF NOT EXISTS `acme`.`Valoracion_Tratamiento` (
  `cod_Valoracion_Tratamientocol` INT NOT NULL COMMENT 'CODIGO VALORACION, TRATAMIENTO',
  `idValoracion` INT NOT NULL COMMENT 'CODIGO VALORACION ',
  `idTratamiento` INT NOT NULL COMMENT 'CODIGO TRATAMIENTO DEL PACIENTE ',
  PRIMARY KEY (`cod_Valoracion_Tratamientocol`),
  INDEX `fk_Valoracion_has_Tratamiento_Tratamiento1_idx` (`idTratamiento` ASC),
  INDEX `fk_Valoracion_has_Tratamiento_Valoracion1_idx` (`idValoracion` ASC),
  CONSTRAINT `fk_Valoracion_has_Tratamiento_Valoracion1`
    FOREIGN KEY (`idValoracion`)
    REFERENCES `acme`.`Valoracion` (`idValoracion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Valoracion_has_Tratamiento_Tratamiento1`
    FOREIGN KEY (`idTratamiento`)
    REFERENCES `acme`.`Tratamiento` (`idTratamiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acme`.`Paciente/Cita`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `acme`.`Paciente/Cita` ;

CREATE TABLE IF NOT EXISTS `acme`.`Paciente/Cita` (
  `idPaciente` INT NOT NULL COMMENT 'CODIGO DEL PACIENTE',
  `idCita` INT NOT NULL COMMENT 'CODIGO DE LA CITA',
  `Fecha` TIME NOT NULL COMMENT 'FECHA DE LA CITA',
  `Hora` DATE NOT NULL COMMENT 'HORA DE LA CITA',
  PRIMARY KEY (`idPaciente`, `idCita`),
  INDEX `fk_Paciente_has_Cita_Cita1_idx` (`idCita` ASC),
  INDEX `fk_Paciente_has_Cita_Paciente1_idx` (`idPaciente` ASC),
  CONSTRAINT `fk_Paciente_has_Cita_Paciente1`
    FOREIGN KEY (`idPaciente`)
    REFERENCES `acme`.`Paciente` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_has_Cita_Cita1`
    FOREIGN KEY (`idCita`)
    REFERENCES `acme`.`Cita` (`idCita`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
